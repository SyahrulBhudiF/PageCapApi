name: page-capture

services:
  page-capture:
    build: .
    restart: always
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "wget", "--spider", "-q", "http://localhost:8080/api/v1/health" ]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - page-capture-network

  redis:
    image: redis:7-alpine
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    volumes:
      - redis-data:/data
    networks:
      - page-capture-network

  postgres:
    image: postgres:15-alpine
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    env_file:
      - .env
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - page-capture-network

  migrate:
    build:
      context: .
      dockerfile: Dockerfile.migrate
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - page-capture-network

networks:
  page-capture-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
